apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      co.elastic.logs/module: elasticsearch
      update.k8s.elastic.co/timestamp: "2022-11-06T17:12:48.256728066Z"
    creationTimestamp: "2022-11-06T17:12:35Z"
    generateName: pl-elastic-es-data-
    labels:
      common.k8s.elastic.co/type: elasticsearch
      controller-revision-hash: pl-elastic-es-data-7b7499d654
      elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
      elasticsearch.k8s.elastic.co/config-hash: "2244492416"
      elasticsearch.k8s.elastic.co/http-scheme: https
      elasticsearch.k8s.elastic.co/node-data: "true"
      elasticsearch.k8s.elastic.co/node-ingest: "true"
      elasticsearch.k8s.elastic.co/node-master: "true"
      elasticsearch.k8s.elastic.co/node-ml: "true"
      elasticsearch.k8s.elastic.co/node-voting_only: "false"
      elasticsearch.k8s.elastic.co/statefulset-name: pl-elastic-es-data
      elasticsearch.k8s.elastic.co/version: 7.6.0
      statefulset.kubernetes.io/pod-name: pl-elastic-es-data-0
    name: pl-elastic-es-data-0
    namespace: plc-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: pl-elastic-es-data
      uid: 7fa93ef4-c70e-4f30-ae90-d2787c7203dc
    resourceVersion: "441579"
    selfLink: /api/v1/namespaces/plc-dev/pods/pl-elastic-es-data-0
    uid: 99e900a7-5bed-4980-9c22-da86bfae7dda
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: false
    containers:
    - env:
      - name: ES_JAVA_OPTS
        value: -Xms1536m -Xmx1536m -Dlog4j2.formatMsgNoLookups=True
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: PROBE_PASSWORD_PATH
        value: /mnt/elastic-internal/probe-user/elastic-internal-probe
      - name: PROBE_USERNAME
        value: elastic-internal-probe
      - name: READINESS_PROBE_PROTOCOL
        value: https
      - name: HEADLESS_SERVICE_NAME
        value: pl-elastic-es-data
      - name: NSS_SDB_USE_CACHE
        value: "no"
      image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - bash
            - -c
            - /mnt/elastic-internal/scripts/pre-stop-hook-script.sh
      name: elasticsearch
      ports:
      - containerPort: 9200
        name: https
        protocol: TCP
      - containerPort: 9300
        name: transport
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - bash
          - -c
          - /mnt/elastic-internal/scripts/readiness-probe-script.sh
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: "2"
          memory: 3Gi
        requests:
          cpu: 500m
          memory: 3Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/elastic-internal/downward-api
        name: downward-api
        readOnly: true
      - mountPath: /usr/share/elasticsearch/bin
        name: elastic-internal-elasticsearch-bin-local
      - mountPath: /mnt/elastic-internal/elasticsearch-config
        name: elastic-internal-elasticsearch-config
        readOnly: true
      - mountPath: /usr/share/elasticsearch/config
        name: elastic-internal-elasticsearch-config-local
      - mountPath: /usr/share/elasticsearch/plugins
        name: elastic-internal-elasticsearch-plugins-local
      - mountPath: /usr/share/elasticsearch/config/http-certs
        name: elastic-internal-http-certificates
        readOnly: true
      - mountPath: /mnt/elastic-internal/probe-user
        name: elastic-internal-probe-user
        readOnly: true
      - mountPath: /usr/share/elasticsearch/config/transport-remote-certs/
        name: elastic-internal-remote-certificate-authorities
        readOnly: true
      - mountPath: /mnt/elastic-internal/scripts
        name: elastic-internal-scripts
        readOnly: true
      - mountPath: /usr/share/elasticsearch/config/transport-certs
        name: elastic-internal-transport-certificates
        readOnly: true
      - mountPath: /mnt/elastic-internal/unicast-hosts
        name: elastic-internal-unicast-hosts
        readOnly: true
      - mountPath: /mnt/elastic-internal/xpack-file-realm
        name: elastic-internal-xpack-file-realm
        readOnly: true
      - mountPath: /usr/share/elasticsearch/data
        name: elasticsearch-data
      - mountPath: /usr/share/elasticsearch/logs
        name: elasticsearch-logs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: pl-elastic-es-data-0
    initContainers:
    - command:
      - bash
      - -c
      - /mnt/elastic-internal/scripts/prepare-fs.sh
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HEADLESS_SERVICE_NAME
        value: pl-elastic-es-data
      image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1
      imagePullPolicy: IfNotPresent
      name: elastic-internal-init-filesystem
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/elastic-internal/downward-api
        name: downward-api
        readOnly: true
      - mountPath: /mnt/elastic-internal/elasticsearch-bin-local
        name: elastic-internal-elasticsearch-bin-local
      - mountPath: /mnt/elastic-internal/elasticsearch-config
        name: elastic-internal-elasticsearch-config
        readOnly: true
      - mountPath: /mnt/elastic-internal/elasticsearch-config-local
        name: elastic-internal-elasticsearch-config-local
      - mountPath: /mnt/elastic-internal/elasticsearch-plugins-local
        name: elastic-internal-elasticsearch-plugins-local
      - mountPath: /usr/share/elasticsearch/config/http-certs
        name: elastic-internal-http-certificates
        readOnly: true
      - mountPath: /mnt/elastic-internal/probe-user
        name: elastic-internal-probe-user
        readOnly: true
      - mountPath: /usr/share/elasticsearch/config/transport-remote-certs/
        name: elastic-internal-remote-certificate-authorities
        readOnly: true
      - mountPath: /mnt/elastic-internal/scripts
        name: elastic-internal-scripts
        readOnly: true
      - mountPath: /mnt/elastic-internal/transport-certificates
        name: elastic-internal-transport-certificates
        readOnly: true
      - mountPath: /mnt/elastic-internal/unicast-hosts
        name: elastic-internal-unicast-hosts
        readOnly: true
      - mountPath: /mnt/elastic-internal/xpack-file-realm
        name: elastic-internal-xpack-file-realm
        readOnly: true
      - mountPath: /usr/share/elasticsearch/data
        name: elasticsearch-data
      - mountPath: /usr/share/elasticsearch/logs
        name: elasticsearch-logs
    - command:
      - sh
      - -c
      - sysctl -w vm.max_map_count=262144
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: HEADLESS_SERVICE_NAME
        value: pl-elastic-es-data
      image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1
      imagePullPolicy: IfNotPresent
      name: sysctl
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/elastic-internal/downward-api
        name: downward-api
        readOnly: true
      - mountPath: /usr/share/elasticsearch/bin
        name: elastic-internal-elasticsearch-bin-local
      - mountPath: /mnt/elastic-internal/elasticsearch-config
        name: elastic-internal-elasticsearch-config
        readOnly: true
      - mountPath: /usr/share/elasticsearch/config
        name: elastic-internal-elasticsearch-config-local
      - mountPath: /usr/share/elasticsearch/plugins
        name: elastic-internal-elasticsearch-plugins-local
      - mountPath: /usr/share/elasticsearch/config/http-certs
        name: elastic-internal-http-certificates
        readOnly: true
      - mountPath: /mnt/elastic-internal/probe-user
        name: elastic-internal-probe-user
        readOnly: true
      - mountPath: /usr/share/elasticsearch/config/transport-remote-certs/
        name: elastic-internal-remote-certificate-authorities
        readOnly: true
      - mountPath: /mnt/elastic-internal/scripts
        name: elastic-internal-scripts
        readOnly: true
      - mountPath: /usr/share/elasticsearch/config/transport-certs
        name: elastic-internal-transport-certificates
        readOnly: true
      - mountPath: /mnt/elastic-internal/unicast-hosts
        name: elastic-internal-unicast-hosts
        readOnly: true
      - mountPath: /mnt/elastic-internal/xpack-file-realm
        name: elastic-internal-xpack-file-realm
        readOnly: true
      - mountPath: /usr/share/elasticsearch/data
        name: elasticsearch-data
      - mountPath: /usr/share/elasticsearch/logs
        name: elasticsearch-logs
    nodeName: ss1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: pl-elastic-es-data
    terminationGracePeriodSeconds: 180
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: elasticsearch-data
      persistentVolumeClaim:
        claimName: elasticsearch-data-pl-elastic-es-data-0
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
      name: downward-api
    - emptyDir: {}
      name: elastic-internal-elasticsearch-bin-local
    - name: elastic-internal-elasticsearch-config
      secret:
        defaultMode: 420
        optional: false
        secretName: pl-elastic-es-data-es-config
    - emptyDir: {}
      name: elastic-internal-elasticsearch-config-local
    - emptyDir: {}
      name: elastic-internal-elasticsearch-plugins-local
    - name: elastic-internal-http-certificates
      secret:
        defaultMode: 420
        optional: false
        secretName: pl-elastic-es-http-certs-internal
    - name: elastic-internal-probe-user
      secret:
        defaultMode: 420
        items:
        - key: elastic-internal-probe
          path: elastic-internal-probe
        optional: false
        secretName: pl-elastic-es-internal-users
    - name: elastic-internal-remote-certificate-authorities
      secret:
        defaultMode: 420
        optional: false
        secretName: pl-elastic-es-remote-ca
    - configMap:
        defaultMode: 493
        name: pl-elastic-es-scripts
        optional: false
      name: elastic-internal-scripts
    - name: elastic-internal-transport-certificates
      secret:
        defaultMode: 420
        optional: false
        secretName: pl-elastic-es-data-es-transport-certs
    - configMap:
        defaultMode: 420
        name: pl-elastic-es-unicast-hosts
        optional: false
      name: elastic-internal-unicast-hosts
    - name: elastic-internal-xpack-file-realm
      secret:
        defaultMode: 420
        optional: false
        secretName: pl-elastic-es-xpack-file-realm
    - emptyDir: {}
      name: elasticsearch-logs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:13:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:13:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a41a23692d5b7359bf1788ee836d980bd88c7bfe9034335187b8eb76ab67e62d
      image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1
      imageID: docker-pullable://gcr.io/pixie-oss/pixie-dev-public/elasticsearch@sha256:f734909115be9dba66736c4b7356fd52da58b1ffdb895ba74cb5c2fca2b133dd
      lastState: {}
      name: elasticsearch
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-11-06T17:12:50Z"
    hostIP: 192.168.1.11
    initContainerStatuses:
    - containerID: docker://31fea1cc1eecdb321513ca95a248889b2da04889484bf55186fec9a8e1429370
      image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1
      imageID: docker-pullable://gcr.io/pixie-oss/pixie-dev-public/elasticsearch@sha256:f734909115be9dba66736c4b7356fd52da58b1ffdb895ba74cb5c2fca2b133dd
      lastState: {}
      name: elastic-internal-init-filesystem
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://31fea1cc1eecdb321513ca95a248889b2da04889484bf55186fec9a8e1429370
          exitCode: 0
          finishedAt: "2022-11-06T17:12:48Z"
          reason: Completed
          startedAt: "2022-11-06T17:12:47Z"
    - containerID: docker://aa3d60b33b71eeff3ef5b371cf4b5a17babeb50721d9ea95ec2df67c7bb62b21
      image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1
      imageID: docker-pullable://gcr.io/pixie-oss/pixie-dev-public/elasticsearch@sha256:f734909115be9dba66736c4b7356fd52da58b1ffdb895ba74cb5c2fca2b133dd
      lastState: {}
      name: sysctl
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://aa3d60b33b71eeff3ef5b371cf4b5a17babeb50721d9ea95ec2df67c7bb62b21
          exitCode: 0
          finishedAt: "2022-11-06T17:12:49Z"
          reason: Completed
          startedAt: "2022-11-06T17:12:49Z"
    phase: Running
    podIP: 172.16.189.89
    podIPs:
    - ip: 172.16.189.89
    qosClass: Burstable
    startTime: "2022-11-06T17:12:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      co.elastic.logs/module: kibana
    creationTimestamp: "2022-11-06T17:12:36Z"
    generateName: pl-kibana-kb-89d5759d6-
    labels:
      common.k8s.elastic.co/type: kibana
      kibana.k8s.elastic.co/config-checksum: 9e5691ff7e0631b089bcb06e729e8fdde9f4ca7f95b0f01972c69f84
      kibana.k8s.elastic.co/name: pl-kibana
      kibana.k8s.elastic.co/version: 7.6.0
      pod-template-hash: 89d5759d6
    name: pl-kibana-kb-89d5759d6-tbj5j
    namespace: plc-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pl-kibana-kb-89d5759d6
      uid: d1d99032-d6c6-438e-af58-4eb878d2320d
    resourceVersion: "441679"
    selfLink: /api/v1/namespaces/plc-dev/pods/pl-kibana-kb-89d5759d6-tbj5j
    uid: 16bf0f30-12a1-4f2c-a3a1-027d14c370aa
  spec:
    automountServiceAccountToken: false
    containers:
    - image: docker.elastic.co/kibana/kibana:7.6.0
      imagePullPolicy: IfNotPresent
      name: kibana
      ports:
      - containerPort: 5601
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /login
          port: 5601
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 1Gi
        requests:
          memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/elastic-internal/http-certs
        name: elastic-internal-http-certificates
        readOnly: true
      - mountPath: /mnt/elastic-internal/kibana-config
        name: elastic-internal-kibana-config
        readOnly: true
      - mountPath: /usr/share/kibana/config
        name: elastic-internal-kibana-config-local
      - mountPath: /usr/share/kibana/config/elasticsearch-certs
        name: elasticsearch-certs
        readOnly: true
      - mountPath: /usr/share/kibana/data
        name: kibana-data
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /usr/bin/env
      - bash
      - -c
      - "#!/usr/bin/env bash\nset -eux\n\ninit_config_initialized_flag=/mnt/elastic-internal/kibana-config-local/elastic-internal-init-config.ok\n\nif
        [[ -f \"${init_config_initialized_flag}\" ]]; then\n    echo \"Kibana configuration
        already initialized.\"\n\texit 0\nfi\n\necho \"Setup Kibana configuration\"\n\nln
        -sf /mnt/elastic-internal/kibana-config/* /mnt/elastic-internal/kibana-config-local/\n\ntouch
        \"${init_config_initialized_flag}\"\necho \"Kibana configuration successfully
        prepared.\"\n"
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: docker.elastic.co/kibana/kibana:7.6.0
      imagePullPolicy: IfNotPresent
      name: elastic-internal-init-config
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /mnt/elastic-internal/http-certs
        name: elastic-internal-http-certificates
        readOnly: true
      - mountPath: /mnt/elastic-internal/kibana-config
        name: elastic-internal-kibana-config
        readOnly: true
      - mountPath: /mnt/elastic-internal/kibana-config-local
        name: elastic-internal-kibana-config-local
      - mountPath: /usr/share/kibana/config/elasticsearch-certs
        name: elasticsearch-certs
        readOnly: true
      - mountPath: /usr/share/kibana/data
        name: kibana-data
    nodeName: mm1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: elastic-internal-http-certificates
      secret:
        defaultMode: 420
        optional: false
        secretName: pl-kibana-kb-http-certs-internal
    - name: elastic-internal-kibana-config
      secret:
        defaultMode: 420
        optional: false
        secretName: pl-kibana-kb-config
    - emptyDir: {}
      name: elastic-internal-kibana-config-local
    - name: elasticsearch-certs
      secret:
        defaultMode: 420
        optional: false
        secretName: pl-kibana-kb-es-ca
    - emptyDir: {}
      name: kibana-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:13:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:13:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d69c6b14c349f1981886e7043b12ed9a5e8eda8e2748d590d841bb58d8d6679f
      image: docker.elastic.co/kibana/kibana:7.6.0
      imageID: docker-pullable://docker.elastic.co/kibana/kibana@sha256:2cb31b8d865b4ccc93ca72d4f23d338daacc06fb18dda8dec3f2e8e28e151743
      lastState: {}
      name: kibana
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-11-06T17:12:39Z"
    hostIP: 192.168.1.10
    initContainerStatuses:
    - containerID: docker://e8bfcbc8fd62a3f976ad2157adbf60c95798b6fd83a656ae8ae710668f6f99de
      image: docker.elastic.co/kibana/kibana:7.6.0
      imageID: docker-pullable://docker.elastic.co/kibana/kibana@sha256:2cb31b8d865b4ccc93ca72d4f23d338daacc06fb18dda8dec3f2e8e28e151743
      lastState: {}
      name: elastic-internal-init-config
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://e8bfcbc8fd62a3f976ad2157adbf60c95798b6fd83a656ae8ae710668f6f99de
          exitCode: 0
          finishedAt: "2022-11-06T17:12:38Z"
          reason: Completed
          startedAt: "2022-11-06T17:12:38Z"
    phase: Running
    podIP: 172.19.120.79
    podIPs:
    - ip: 172.19.120.79
    qosClass: Burstable
    startTime: "2022-11-06T17:12:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-11-06T17:12:32Z"
    generateName: pl-nats-
    labels:
      app: pl-cloud
      component: cloud-deps
      controller-revision-hash: pl-nats-5b9795c869
      name: pl-nats
      statefulset.kubernetes.io/pod-name: pl-nats-0
    name: pl-nats-0
    namespace: plc-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: pl-nats
      uid: 49d2edd4-2684-4dd5-a448-19578b1f0b6e
    resourceVersion: "441305"
    selfLink: /api/v1/namespaces/plc-dev/pods/pl-nats-0
    uid: f94416f6-362a-4f98-a8c7-9eeba668bbb6
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - pl-nats
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - command:
      - nats-server
      - --config
      - /etc/nats-config/nats.conf
      - -js
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CLUSTER_ADVERTISE
        value: $(POD_NAME).pl-nats.$(POD_NAMESPACE).svc
      image: nats:2.9.0-alpine3.16
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - /nats-server -sl=ldm=/var/run/nats/nats.pid && /bin/sleep 60
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8222
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: pl-nats
      ports:
      - containerPort: 4222
        name: client
        protocol: TCP
      - containerPort: 7422
        name: leafnodes
        protocol: TCP
      - containerPort: 6222
        name: cluster
        protocol: TCP
      - containerPort: 8222
        name: monitor
        protocol: TCP
      - containerPort: 7777
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /
          port: 8222
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/nats-config
        name: config-volume
      - mountPath: /etc/nats-server-tls-certs
        name: nats-server-tls-volume
      - mountPath: /var/run/nats
        name: pid
      - mountPath: /data/jetstream
        name: nats-sts-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l9pp5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: pl-nats-0
    nodeName: mm1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    shareProcessNamespace: true
    subdomain: pl-nats
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: nats-sts-vol
      persistentVolumeClaim:
        claimName: nats-sts-vol-pl-nats-0
    - name: nats-server-tls-volume
      secret:
        defaultMode: 420
        secretName: service-tls-certs
    - configMap:
        defaultMode: 420
        name: nats-config
      name: config-volume
    - emptyDir: {}
      name: pid
    - name: kube-api-access-l9pp5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:34Z"
      message: 'containers with unready status: [pl-nats]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:34Z"
      message: 'containers with unready status: [pl-nats]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nats:2.9.0-alpine3.16
      imageID: ""
      lastState: {}
      name: pl-nats
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.1.10
    phase: Pending
    qosClass: BestEffort
    startTime: "2022-11-06T17:12:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-11-06T17:12:32Z"
    generateName: pl-stan-
    labels:
      app: pl-cloud
      component: cloud-deps
      controller-revision-hash: pl-stan-79df97cf65
      name: pl-stan
      statefulset.kubernetes.io/pod-name: pl-stan-0
    name: pl-stan-0
    namespace: plc-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: pl-stan
      uid: 6345620e-bea9-4001-b3c9-f17d0d6e756c
    resourceVersion: "441266"
    selfLink: /api/v1/namespaces/plc-dev/pods/pl-stan-0
    uid: 43b02840-c4ce-40b7-8df1-1ecbfde29350
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - pl-stan
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - -sc
      - /etc/stan-config/stan.conf
      env:
      - name: GOGC
        value: "400"
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: nats-streaming:0.24.6-alpine3.15
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8222
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: pl-stan
      ports:
      - containerPort: 8222
        name: monitor
        protocol: TCP
      - containerPort: 7777
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /streaming/serverz
          port: 8222
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: "0"
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/stan-config
        name: config-volume
      - mountPath: /data/stan
        name: stan-sts-vol
      - mountPath: /etc/nats/certs
        name: nats-server-tls-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-64nq7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: pl-stan-0
    nodeName: mm1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: pl-stan
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: stan-sts-vol
      persistentVolumeClaim:
        claimName: stan-sts-vol-pl-stan-0
    - configMap:
        defaultMode: 420
        name: stan-config
      name: config-volume
    - name: nats-server-tls-volume
      secret:
        defaultMode: 420
        secretName: service-tls-certs
    - name: kube-api-access-64nq7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:33Z"
      message: 'containers with unready status: [pl-stan]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:33Z"
      message: 'containers with unready status: [pl-stan]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nats-streaming:0.24.6-alpine3.15
      imageID: ""
      lastState: {}
      name: pl-stan
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.1.10
    phase: Pending
    qosClass: BestEffort
    startTime: "2022-11-06T17:12:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-11-06T17:12:32Z"
    generateName: postgres-5cb4875b6d-
    labels:
      app: pl-cloud
      name: postgres
      pod-template-hash: 5cb4875b6d
    name: postgres-5cb4875b6d-qhrkv
    namespace: plc-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: postgres-5cb4875b6d
      uid: 1727e124-698f-4f86-9842-222dc7a532cf
    resourceVersion: "441339"
    selfLink: /api/v1/namespaces/plc-dev/pods/postgres-5cb4875b6d-qhrkv
    uid: a6ae9c88-2f5b-400f-83aa-48e36a54cebc
  spec:
    containers:
    - env:
      - name: POSTGRES_DB
        value: pl
      - name: POSTGRES_USER
        value: pl
      - name: POSTGRES_PASSWORD
        value: pl
      image: postgres:13.3
      imagePullPolicy: IfNotPresent
      name: postgres
      ports:
      - containerPort: 5432
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgres-pv-claim
        subPath: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cjl9b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: mm1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: postgres-pv-claim
      persistentVolumeClaim:
        claimName: postgres-pv-claim
    - name: kube-api-access-cjl9b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-11-06T17:12:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://21f3fa00cfc6428ca2b98c2a553a018965637bfd0a2c3ceb44edb62ddacb8348
      image: postgres:13.3
      imageID: docker-pullable://postgres@sha256:6647385dd9ae11aa2216bf55c54d126b0a85637b3cf4039ef24e3234113588e3
      lastState: {}
      name: postgres
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2022-11-06T17:12:35Z"
    hostIP: 192.168.1.10
    phase: Running
    podIP: 172.19.120.76
    podIPs:
    - ip: 172.19.120.76
    qosClass: BestEffort
    startTime: "2022-11-06T17:12:33Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-11-06T17:12:35Z"
    labels:
      common.k8s.elastic.co/type: elasticsearch
      elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
      elasticsearch.k8s.elastic.co/statefulset-name: pl-elastic-es-data
    name: pl-elastic-es-data
    namespace: plc-dev
    ownerReferences:
    - apiVersion: elasticsearch.k8s.elastic.co/v1
      blockOwnerDeletion: true
      controller: true
      kind: Elasticsearch
      name: pl-elastic
      uid: bf5ba816-9369-458f-8a4b-67dc64739406
    resourceVersion: "441310"
    selfLink: /api/v1/namespaces/plc-dev/services/pl-elastic-es-data
    uid: f6cbf0d7-a15c-410b-b057-b6accca1f199
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 9200
      protocol: TCP
      targetPort: 9200
    publishNotReadyAddresses: true
    selector:
      common.k8s.elastic.co/type: elasticsearch
      elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
      elasticsearch.k8s.elastic.co/statefulset-name: pl-elastic-es-data
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-11-06T17:12:32Z"
    labels:
      common.k8s.elastic.co/type: elasticsearch
      elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
    name: pl-elastic-es-http
    namespace: plc-dev
    ownerReferences:
    - apiVersion: elasticsearch.k8s.elastic.co/v1
      blockOwnerDeletion: true
      controller: true
      kind: Elasticsearch
      name: pl-elastic
      uid: bf5ba816-9369-458f-8a4b-67dc64739406
    resourceVersion: "441218"
    selfLink: /api/v1/namespaces/plc-dev/services/pl-elastic-es-http
    uid: 950ace7f-4efb-44c1-b18e-5eef7fdb2fef
  spec:
    clusterIP: 10.109.83.64
    clusterIPs:
    - 10.109.83.64
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 9200
      protocol: TCP
      targetPort: 9200
    selector:
      common.k8s.elastic.co/type: elasticsearch
      elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-11-06T17:12:32Z"
    labels:
      common.k8s.elastic.co/type: elasticsearch
      elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
    name: pl-elastic-es-transport
    namespace: plc-dev
    ownerReferences:
    - apiVersion: elasticsearch.k8s.elastic.co/v1
      blockOwnerDeletion: true
      controller: true
      kind: Elasticsearch
      name: pl-elastic
      uid: bf5ba816-9369-458f-8a4b-67dc64739406
    resourceVersion: "441206"
    selfLink: /api/v1/namespaces/plc-dev/services/pl-elastic-es-transport
    uid: 1e95c006-c056-4f76-b9cb-d030ae427ed7
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tls-transport
      port: 9300
      protocol: TCP
      targetPort: 9300
    publishNotReadyAddresses: true
    selector:
      common.k8s.elastic.co/type: elasticsearch
      elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2022-11-06T17:12:33Z"
    labels:
      common.k8s.elastic.co/type: kibana
      kibana.k8s.elastic.co/name: pl-kibana
    name: pl-kibana-kb-http
    namespace: plc-dev
    ownerReferences:
    - apiVersion: kibana.k8s.elastic.co/v1
      blockOwnerDeletion: true
      controller: true
      kind: Kibana
      name: pl-kibana
      uid: 0c985f00-e564-4518-a409-89e6a9313e55
    resourceVersion: "441251"
    selfLink: /api/v1/namespaces/plc-dev/services/pl-kibana-kb-http
    uid: 9dd991f3-629e-4d80-a41c-572123d7a088
  spec:
    clusterIP: 10.96.51.237
    clusterIPs:
    - 10.96.51.237
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 5601
      protocol: TCP
      targetPort: 5601
    selector:
      common.k8s.elastic.co/type: kibana
      kibana.k8s.elastic.co/name: pl-kibana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pl-cloud","component":"cloud-deps","name":"pl-nats"},"name":"pl-nats","namespace":"plc-dev"},"spec":{"clusterIP":"None","ports":[{"name":"client","port":4222},{"name":"cluster","port":6222},{"name":"monitor","port":8222},{"name":"metrics","port":7777},{"name":"leafnodes","port":7422},{"name":"gateways","port":7522}],"selector":{"app":"pl-cloud","component":"cloud-deps","name":"pl-nats"}}}
    creationTimestamp: "2022-11-06T17:12:32Z"
    labels:
      app: pl-cloud
      component: cloud-deps
      name: pl-nats
    name: pl-nats
    namespace: plc-dev
    resourceVersion: "441148"
    selfLink: /api/v1/namespaces/plc-dev/services/pl-nats
    uid: 7a989515-5f29-4cd7-8fad-7e9d6a5fe3fb
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: client
      port: 4222
      protocol: TCP
      targetPort: 4222
    - name: cluster
      port: 6222
      protocol: TCP
      targetPort: 6222
    - name: monitor
      port: 8222
      protocol: TCP
      targetPort: 8222
    - name: metrics
      port: 7777
      protocol: TCP
      targetPort: 7777
    - name: leafnodes
      port: 7422
      protocol: TCP
      targetPort: 7422
    - name: gateways
      port: 7522
      protocol: TCP
      targetPort: 7522
    selector:
      app: pl-cloud
      component: cloud-deps
      name: pl-nats
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pl-cloud","component":"cloud-deps","name":"pl-stan"},"name":"pl-stan","namespace":"plc-dev"},"spec":{"clusterIP":"None","ports":[{"name":"metrics","port":7777}],"selector":{"app":"pl-cloud","component":"cloud-deps","name":"pl-stan"}}}
    creationTimestamp: "2022-11-06T17:12:32Z"
    labels:
      app: pl-cloud
      component: cloud-deps
      name: pl-stan
    name: pl-stan
    namespace: plc-dev
    resourceVersion: "441149"
    selfLink: /api/v1/namespaces/plc-dev/services/pl-stan
    uid: a16dcdb5-0b6a-4410-a435-07e775351cb9
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 7777
      protocol: TCP
      targetPort: 7777
    selector:
      app: pl-cloud
      component: cloud-deps
      name: pl-stan
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pl-cloud"},"name":"postgres","namespace":"plc-dev"},"spec":{"ports":[{"port":5432}],"selector":{"app":"pl-cloud","name":"postgres"}}}
    creationTimestamp: "2022-11-06T17:12:32Z"
    labels:
      app: pl-cloud
    name: postgres
    namespace: plc-dev
    resourceVersion: "441155"
    selfLink: /api/v1/namespaces/plc-dev/services/postgres
    uid: f2134425-ff66-4b01-8fad-75ca2dd79b47
  spec:
    clusterIP: 10.111.17.253
    clusterIPs:
    - 10.111.17.253
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: pl-cloud
      name: postgres
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-11-06T17:12:36Z"
    generation: 1
    labels:
      common.k8s.elastic.co/template-hash: "3249971366"
      common.k8s.elastic.co/type: kibana
      kibana.k8s.elastic.co/name: pl-kibana
    name: pl-kibana-kb
    namespace: plc-dev
    ownerReferences:
    - apiVersion: kibana.k8s.elastic.co/v1
      blockOwnerDeletion: true
      controller: true
      kind: Kibana
      name: pl-kibana
      uid: 0c985f00-e564-4518-a409-89e6a9313e55
    resourceVersion: "441683"
    selfLink: /apis/apps/v1/namespaces/plc-dev/deployments/pl-kibana-kb
    uid: 3202e46c-5141-4ad9-9412-4cd51cc30ee6
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 0
    selector:
      matchLabels:
        common.k8s.elastic.co/type: kibana
        kibana.k8s.elastic.co/name: pl-kibana
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          co.elastic.logs/module: kibana
        creationTimestamp: null
        labels:
          common.k8s.elastic.co/type: kibana
          kibana.k8s.elastic.co/config-checksum: 9e5691ff7e0631b089bcb06e729e8fdde9f4ca7f95b0f01972c69f84
          kibana.k8s.elastic.co/name: pl-kibana
          kibana.k8s.elastic.co/version: 7.6.0
      spec:
        automountServiceAccountToken: false
        containers:
        - image: docker.elastic.co/kibana/kibana:7.6.0
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
          - containerPort: 5601
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 5601
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /mnt/elastic-internal/http-certs
            name: elastic-internal-http-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/kibana-config
            name: elastic-internal-kibana-config
            readOnly: true
          - mountPath: /usr/share/kibana/config
            name: elastic-internal-kibana-config-local
          - mountPath: /usr/share/kibana/config/elasticsearch-certs
            name: elasticsearch-certs
            readOnly: true
          - mountPath: /usr/share/kibana/data
            name: kibana-data
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /usr/bin/env
          - bash
          - -c
          - "#!/usr/bin/env bash\nset -eux\n\ninit_config_initialized_flag=/mnt/elastic-internal/kibana-config-local/elastic-internal-init-config.ok\n\nif
            [[ -f \"${init_config_initialized_flag}\" ]]; then\n    echo \"Kibana
            configuration already initialized.\"\n\texit 0\nfi\n\necho \"Setup Kibana
            configuration\"\n\nln -sf /mnt/elastic-internal/kibana-config/* /mnt/elastic-internal/kibana-config-local/\n\ntouch
            \"${init_config_initialized_flag}\"\necho \"Kibana configuration successfully
            prepared.\"\n"
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.elastic.co/kibana/kibana:7.6.0
          imagePullPolicy: IfNotPresent
          name: elastic-internal-init-config
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /mnt/elastic-internal/http-certs
            name: elastic-internal-http-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/kibana-config
            name: elastic-internal-kibana-config
            readOnly: true
          - mountPath: /mnt/elastic-internal/kibana-config-local
            name: elastic-internal-kibana-config-local
          - mountPath: /usr/share/kibana/config/elasticsearch-certs
            name: elasticsearch-certs
            readOnly: true
          - mountPath: /usr/share/kibana/data
            name: kibana-data
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: elastic-internal-http-certificates
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-kibana-kb-http-certs-internal
        - name: elastic-internal-kibana-config
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-kibana-kb-config
        - emptyDir: {}
          name: elastic-internal-kibana-config-local
        - name: elasticsearch-certs
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-kibana-kb-es-ca
        - emptyDir: {}
          name: kibana-data
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-11-06T17:13:37Z"
      lastUpdateTime: "2022-11-06T17:13:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-11-06T17:12:36Z"
      lastUpdateTime: "2022-11-06T17:13:37Z"
      message: ReplicaSet "pl-kibana-kb-89d5759d6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"pl-cloud"},"name":"postgres","namespace":"plc-dev"},"spec":{"selector":{"matchLabels":{"app":"pl-cloud"}},"template":{"metadata":{"labels":{"app":"pl-cloud","name":"postgres"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_DB","value":"pl"},{"name":"POSTGRES_USER","value":"pl"},{"name":"POSTGRES_PASSWORD","value":"pl"}],"image":"postgres:13.3","name":"postgres","ports":[{"containerPort":5432}],"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"postgres-pv-claim","subPath":"data"}]}],"volumes":[{"name":"postgres-pv-claim","persistentVolumeClaim":{"claimName":"postgres-pv-claim"}}]}}}}
    creationTimestamp: "2022-11-06T17:12:32Z"
    generation: 1
    labels:
      app: pl-cloud
    name: postgres
    namespace: plc-dev
    resourceVersion: "441343"
    selfLink: /apis/apps/v1/namespaces/plc-dev/deployments/postgres
    uid: 1ca0f5a9-fa58-496b-ac74-d29d9fde5882
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: pl-cloud
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pl-cloud
          name: postgres
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            value: pl
          - name: POSTGRES_USER
            value: pl
          - name: POSTGRES_PASSWORD
            value: pl
          image: postgres:13.3
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-pv-claim
            subPath: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-pv-claim
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-11-06T17:12:36Z"
      lastUpdateTime: "2022-11-06T17:12:36Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-11-06T17:12:32Z"
      lastUpdateTime: "2022-11-06T17:12:36Z"
      message: ReplicaSet "postgres-5cb4875b6d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-11-06T17:12:36Z"
    generation: 1
    labels:
      common.k8s.elastic.co/type: kibana
      kibana.k8s.elastic.co/config-checksum: 9e5691ff7e0631b089bcb06e729e8fdde9f4ca7f95b0f01972c69f84
      kibana.k8s.elastic.co/name: pl-kibana
      kibana.k8s.elastic.co/version: 7.6.0
      pod-template-hash: 89d5759d6
    name: pl-kibana-kb-89d5759d6
    namespace: plc-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pl-kibana-kb
      uid: 3202e46c-5141-4ad9-9412-4cd51cc30ee6
    resourceVersion: "441682"
    selfLink: /apis/apps/v1/namespaces/plc-dev/replicasets/pl-kibana-kb-89d5759d6
    uid: d1d99032-d6c6-438e-af58-4eb878d2320d
  spec:
    replicas: 1
    selector:
      matchLabels:
        common.k8s.elastic.co/type: kibana
        kibana.k8s.elastic.co/name: pl-kibana
        pod-template-hash: 89d5759d6
    template:
      metadata:
        annotations:
          co.elastic.logs/module: kibana
        creationTimestamp: null
        labels:
          common.k8s.elastic.co/type: kibana
          kibana.k8s.elastic.co/config-checksum: 9e5691ff7e0631b089bcb06e729e8fdde9f4ca7f95b0f01972c69f84
          kibana.k8s.elastic.co/name: pl-kibana
          kibana.k8s.elastic.co/version: 7.6.0
          pod-template-hash: 89d5759d6
      spec:
        automountServiceAccountToken: false
        containers:
        - image: docker.elastic.co/kibana/kibana:7.6.0
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
          - containerPort: 5601
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 5601
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /mnt/elastic-internal/http-certs
            name: elastic-internal-http-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/kibana-config
            name: elastic-internal-kibana-config
            readOnly: true
          - mountPath: /usr/share/kibana/config
            name: elastic-internal-kibana-config-local
          - mountPath: /usr/share/kibana/config/elasticsearch-certs
            name: elasticsearch-certs
            readOnly: true
          - mountPath: /usr/share/kibana/data
            name: kibana-data
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /usr/bin/env
          - bash
          - -c
          - "#!/usr/bin/env bash\nset -eux\n\ninit_config_initialized_flag=/mnt/elastic-internal/kibana-config-local/elastic-internal-init-config.ok\n\nif
            [[ -f \"${init_config_initialized_flag}\" ]]; then\n    echo \"Kibana
            configuration already initialized.\"\n\texit 0\nfi\n\necho \"Setup Kibana
            configuration\"\n\nln -sf /mnt/elastic-internal/kibana-config/* /mnt/elastic-internal/kibana-config-local/\n\ntouch
            \"${init_config_initialized_flag}\"\necho \"Kibana configuration successfully
            prepared.\"\n"
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.elastic.co/kibana/kibana:7.6.0
          imagePullPolicy: IfNotPresent
          name: elastic-internal-init-config
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /mnt/elastic-internal/http-certs
            name: elastic-internal-http-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/kibana-config
            name: elastic-internal-kibana-config
            readOnly: true
          - mountPath: /mnt/elastic-internal/kibana-config-local
            name: elastic-internal-kibana-config-local
          - mountPath: /usr/share/kibana/config/elasticsearch-certs
            name: elasticsearch-certs
            readOnly: true
          - mountPath: /usr/share/kibana/data
            name: kibana-data
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: elastic-internal-http-certificates
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-kibana-kb-http-certs-internal
        - name: elastic-internal-kibana-config
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-kibana-kb-config
        - emptyDir: {}
          name: elastic-internal-kibana-config-local
        - name: elasticsearch-certs
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-kibana-kb-es-ca
        - emptyDir: {}
          name: kibana-data
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2022-11-06T17:12:32Z"
    generation: 1
    labels:
      app: pl-cloud
      name: postgres
      pod-template-hash: 5cb4875b6d
    name: postgres-5cb4875b6d
    namespace: plc-dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 1ca0f5a9-fa58-496b-ac74-d29d9fde5882
    resourceVersion: "441342"
    selfLink: /apis/apps/v1/namespaces/plc-dev/replicasets/postgres-5cb4875b6d
    uid: 1727e124-698f-4f86-9842-222dc7a532cf
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: pl-cloud
        pod-template-hash: 5cb4875b6d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pl-cloud
          name: postgres
          pod-template-hash: 5cb4875b6d
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            value: pl
          - name: POSTGRES_USER
            value: pl
          - name: POSTGRES_PASSWORD
            value: pl
          image: postgres:13.3
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-pv-claim
            subPath: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-pv-claim
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: "2022-11-06T17:12:35Z"
    generation: 1
    labels:
      common.k8s.elastic.co/template-hash: "1204337367"
      common.k8s.elastic.co/type: elasticsearch
      elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
      elasticsearch.k8s.elastic.co/statefulset-name: pl-elastic-es-data
    name: pl-elastic-es-data
    namespace: plc-dev
    ownerReferences:
    - apiVersion: elasticsearch.k8s.elastic.co/v1
      blockOwnerDeletion: true
      controller: true
      kind: Elasticsearch
      name: pl-elastic
      uid: bf5ba816-9369-458f-8a4b-67dc64739406
    resourceVersion: "441587"
    selfLink: /apis/apps/v1/namespaces/plc-dev/statefulsets/pl-elastic-es-data
    uid: 7fa93ef4-c70e-4f30-ae90-d2787c7203dc
  spec:
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        common.k8s.elastic.co/type: elasticsearch
        elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
        elasticsearch.k8s.elastic.co/statefulset-name: pl-elastic-es-data
    serviceName: pl-elastic-es-data
    template:
      metadata:
        annotations:
          co.elastic.logs/module: elasticsearch
        creationTimestamp: null
        labels:
          common.k8s.elastic.co/type: elasticsearch
          elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
          elasticsearch.k8s.elastic.co/config-hash: "2244492416"
          elasticsearch.k8s.elastic.co/http-scheme: https
          elasticsearch.k8s.elastic.co/node-data: "true"
          elasticsearch.k8s.elastic.co/node-ingest: "true"
          elasticsearch.k8s.elastic.co/node-master: "true"
          elasticsearch.k8s.elastic.co/node-ml: "true"
          elasticsearch.k8s.elastic.co/node-voting_only: "false"
          elasticsearch.k8s.elastic.co/statefulset-name: pl-elastic-es-data
          elasticsearch.k8s.elastic.co/version: 7.6.0
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    elasticsearch.k8s.elastic.co/cluster-name: pl-elastic
                topologyKey: kubernetes.io/hostname
              weight: 100
        automountServiceAccountToken: false
        containers:
        - env:
          - name: ES_JAVA_OPTS
            value: -Xms1536m -Xmx1536m -Dlog4j2.formatMsgNoLookups=True
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: PROBE_PASSWORD_PATH
            value: /mnt/elastic-internal/probe-user/elastic-internal-probe
          - name: PROBE_USERNAME
            value: elastic-internal-probe
          - name: READINESS_PROBE_PROTOCOL
            value: https
          - name: HEADLESS_SERVICE_NAME
            value: pl-elastic-es-data
          - name: NSS_SDB_USE_CACHE
            value: "no"
          image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - bash
                - -c
                - /mnt/elastic-internal/scripts/pre-stop-hook-script.sh
          name: elasticsearch
          ports:
          - containerPort: 9200
            name: https
            protocol: TCP
          - containerPort: 9300
            name: transport
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - /mnt/elastic-internal/scripts/readiness-probe-script.sh
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: 500m
              memory: 3Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /mnt/elastic-internal/downward-api
            name: downward-api
            readOnly: true
          - mountPath: /usr/share/elasticsearch/bin
            name: elastic-internal-elasticsearch-bin-local
          - mountPath: /mnt/elastic-internal/elasticsearch-config
            name: elastic-internal-elasticsearch-config
            readOnly: true
          - mountPath: /usr/share/elasticsearch/config
            name: elastic-internal-elasticsearch-config-local
          - mountPath: /usr/share/elasticsearch/plugins
            name: elastic-internal-elasticsearch-plugins-local
          - mountPath: /usr/share/elasticsearch/config/http-certs
            name: elastic-internal-http-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/probe-user
            name: elastic-internal-probe-user
            readOnly: true
          - mountPath: /usr/share/elasticsearch/config/transport-remote-certs/
            name: elastic-internal-remote-certificate-authorities
            readOnly: true
          - mountPath: /mnt/elastic-internal/scripts
            name: elastic-internal-scripts
            readOnly: true
          - mountPath: /usr/share/elasticsearch/config/transport-certs
            name: elastic-internal-transport-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/unicast-hosts
            name: elastic-internal-unicast-hosts
            readOnly: true
          - mountPath: /mnt/elastic-internal/xpack-file-realm
            name: elastic-internal-xpack-file-realm
            readOnly: true
          - mountPath: /usr/share/elasticsearch/data
            name: elasticsearch-data
          - mountPath: /usr/share/elasticsearch/logs
            name: elasticsearch-logs
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - bash
          - -c
          - /mnt/elastic-internal/scripts/prepare-fs.sh
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HEADLESS_SERVICE_NAME
            value: pl-elastic-es-data
          image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1
          imagePullPolicy: IfNotPresent
          name: elastic-internal-init-filesystem
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /mnt/elastic-internal/downward-api
            name: downward-api
            readOnly: true
          - mountPath: /mnt/elastic-internal/elasticsearch-bin-local
            name: elastic-internal-elasticsearch-bin-local
          - mountPath: /mnt/elastic-internal/elasticsearch-config
            name: elastic-internal-elasticsearch-config
            readOnly: true
          - mountPath: /mnt/elastic-internal/elasticsearch-config-local
            name: elastic-internal-elasticsearch-config-local
          - mountPath: /mnt/elastic-internal/elasticsearch-plugins-local
            name: elastic-internal-elasticsearch-plugins-local
          - mountPath: /usr/share/elasticsearch/config/http-certs
            name: elastic-internal-http-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/probe-user
            name: elastic-internal-probe-user
            readOnly: true
          - mountPath: /usr/share/elasticsearch/config/transport-remote-certs/
            name: elastic-internal-remote-certificate-authorities
            readOnly: true
          - mountPath: /mnt/elastic-internal/scripts
            name: elastic-internal-scripts
            readOnly: true
          - mountPath: /mnt/elastic-internal/transport-certificates
            name: elastic-internal-transport-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/unicast-hosts
            name: elastic-internal-unicast-hosts
            readOnly: true
          - mountPath: /mnt/elastic-internal/xpack-file-realm
            name: elastic-internal-xpack-file-realm
            readOnly: true
          - mountPath: /usr/share/elasticsearch/data
            name: elasticsearch-data
          - mountPath: /usr/share/elasticsearch/logs
            name: elasticsearch-logs
        - command:
          - sh
          - -c
          - sysctl -w vm.max_map_count=262144
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: HEADLESS_SERVICE_NAME
            value: pl-elastic-es-data
          image: gcr.io/pixie-oss/pixie-dev-public/elasticsearch:7.6.0-patched1
          imagePullPolicy: IfNotPresent
          name: sysctl
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /mnt/elastic-internal/downward-api
            name: downward-api
            readOnly: true
          - mountPath: /usr/share/elasticsearch/bin
            name: elastic-internal-elasticsearch-bin-local
          - mountPath: /mnt/elastic-internal/elasticsearch-config
            name: elastic-internal-elasticsearch-config
            readOnly: true
          - mountPath: /usr/share/elasticsearch/config
            name: elastic-internal-elasticsearch-config-local
          - mountPath: /usr/share/elasticsearch/plugins
            name: elastic-internal-elasticsearch-plugins-local
          - mountPath: /usr/share/elasticsearch/config/http-certs
            name: elastic-internal-http-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/probe-user
            name: elastic-internal-probe-user
            readOnly: true
          - mountPath: /usr/share/elasticsearch/config/transport-remote-certs/
            name: elastic-internal-remote-certificate-authorities
            readOnly: true
          - mountPath: /mnt/elastic-internal/scripts
            name: elastic-internal-scripts
            readOnly: true
          - mountPath: /usr/share/elasticsearch/config/transport-certs
            name: elastic-internal-transport-certificates
            readOnly: true
          - mountPath: /mnt/elastic-internal/unicast-hosts
            name: elastic-internal-unicast-hosts
            readOnly: true
          - mountPath: /mnt/elastic-internal/xpack-file-realm
            name: elastic-internal-xpack-file-realm
            readOnly: true
          - mountPath: /usr/share/elasticsearch/data
            name: elasticsearch-data
          - mountPath: /usr/share/elasticsearch/logs
            name: elasticsearch-logs
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 180
        volumes:
        - downwardAPI:
            defaultMode: 420
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels
              path: labels
          name: downward-api
        - emptyDir: {}
          name: elastic-internal-elasticsearch-bin-local
        - name: elastic-internal-elasticsearch-config
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-elastic-es-data-es-config
        - emptyDir: {}
          name: elastic-internal-elasticsearch-config-local
        - emptyDir: {}
          name: elastic-internal-elasticsearch-plugins-local
        - name: elastic-internal-http-certificates
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-elastic-es-http-certs-internal
        - name: elastic-internal-probe-user
          secret:
            defaultMode: 420
            items:
            - key: elastic-internal-probe
              path: elastic-internal-probe
            optional: false
            secretName: pl-elastic-es-internal-users
        - name: elastic-internal-remote-certificate-authorities
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-elastic-es-remote-ca
        - configMap:
            defaultMode: 493
            name: pl-elastic-es-scripts
            optional: false
          name: elastic-internal-scripts
        - name: elastic-internal-transport-certificates
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-elastic-es-data-es-transport-certs
        - configMap:
            defaultMode: 420
            name: pl-elastic-es-unicast-hosts
            optional: false
          name: elastic-internal-unicast-hosts
        - name: elastic-internal-xpack-file-realm
          secret:
            defaultMode: 420
            optional: false
            secretName: pl-elastic-es-xpack-file-realm
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: claim-name-placeholder
        - emptyDir: {}
          name: elasticsearch-logs
    updateStrategy:
      type: OnDelete
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: pl-elastic-es-data-7b7499d654
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: pl-elastic-es-data-7b7499d654
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"pl-cloud","component":"cloud-deps","name":"pl-nats"},"name":"pl-nats","namespace":"plc-dev"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"pl-cloud","component":"cloud-deps","name":"pl-nats"}},"serviceName":"pl-nats","template":{"metadata":{"labels":{"app":"pl-cloud","component":"cloud-deps","name":"pl-nats"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"name","operator":"In","values":["pl-nats"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"containers":[{"command":["nats-server","--config","/etc/nats-config/nats.conf","-js"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"CLUSTER_ADVERTISE","value":"$(POD_NAME).pl-nats.$(POD_NAMESPACE).svc"}],"image":"nats:2.9.0-alpine3.16","lifecycle":{"preStop":{"exec":{"command":["/bin/sh","-c","/nats-server -sl=ldm=/var/run/nats/nats.pid \u0026\u0026 /bin/sleep 60"]}}},"livenessProbe":{"httpGet":{"path":"/","port":8222},"initialDelaySeconds":10,"timeoutSeconds":5},"name":"pl-nats","ports":[{"containerPort":4222,"name":"client"},{"containerPort":7422,"name":"leafnodes"},{"containerPort":6222,"name":"cluster"},{"containerPort":8222,"name":"monitor"},{"containerPort":7777,"name":"metrics"}],"readinessProbe":{"failureThreshold":30,"httpGet":{"path":"/","port":8222},"initialDelaySeconds":10,"timeoutSeconds":5},"volumeMounts":[{"mountPath":"/etc/nats-config","name":"config-volume"},{"mountPath":"/etc/nats-server-tls-certs","name":"nats-server-tls-volume"},{"mountPath":"/var/run/nats","name":"pid"},{"mountPath":"/data/jetstream","name":"nats-sts-vol"}]}],"shareProcessNamespace":true,"terminationGracePeriodSeconds":60,"volumes":[{"name":"nats-server-tls-volume","secret":{"secretName":"service-tls-certs"}},{"configMap":{"name":"nats-config"},"name":"config-volume"},{"emptyDir":{},"name":"pid"}]}},"volumeClaimTemplates":[{"metadata":{"labels":{"app":"pl-cloud","component":"cloud-deps"},"name":"nats-sts-vol"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}]}}
    creationTimestamp: "2022-11-06T17:12:32Z"
    generation: 1
    labels:
      app: pl-cloud
      component: cloud-deps
      name: pl-nats
    name: pl-nats
    namespace: plc-dev
    resourceVersion: "441190"
    selfLink: /apis/apps/v1/namespaces/plc-dev/statefulsets/pl-nats
    uid: 49d2edd4-2684-4dd5-a448-19578b1f0b6e
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: pl-cloud
        component: cloud-deps
        name: pl-nats
    serviceName: pl-nats
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pl-cloud
          component: cloud-deps
          name: pl-nats
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: name
                    operator: In
                    values:
                    - pl-nats
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - command:
          - nats-server
          - --config
          - /etc/nats-config/nats.conf
          - -js
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CLUSTER_ADVERTISE
            value: $(POD_NAME).pl-nats.$(POD_NAMESPACE).svc
          image: nats:2.9.0-alpine3.16
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - /nats-server -sl=ldm=/var/run/nats/nats.pid && /bin/sleep 60
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8222
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pl-nats
          ports:
          - containerPort: 4222
            name: client
            protocol: TCP
          - containerPort: 7422
            name: leafnodes
            protocol: TCP
          - containerPort: 6222
            name: cluster
            protocol: TCP
          - containerPort: 8222
            name: monitor
            protocol: TCP
          - containerPort: 7777
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: 8222
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nats-config
            name: config-volume
          - mountPath: /etc/nats-server-tls-certs
            name: nats-server-tls-volume
          - mountPath: /var/run/nats
            name: pid
          - mountPath: /data/jetstream
            name: nats-sts-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        shareProcessNamespace: true
        terminationGracePeriodSeconds: 60
        volumes:
        - name: nats-server-tls-volume
          secret:
            defaultMode: 420
            secretName: service-tls-certs
        - configMap:
            defaultMode: 420
            name: nats-config
          name: config-volume
        - emptyDir: {}
          name: pid
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        labels:
          app: pl-cloud
          component: cloud-deps
        name: nats-sts-vol
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: pl-nats-5b9795c869
    observedGeneration: 1
    replicas: 1
    updateRevision: pl-nats-5b9795c869
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"pl-cloud","component":"cloud-deps","name":"pl-stan"},"name":"pl-stan","namespace":"plc-dev"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"pl-cloud","component":"cloud-deps","name":"pl-stan"}},"serviceName":"pl-stan","template":{"metadata":{"labels":{"app":"pl-cloud","component":"cloud-deps","name":"pl-stan"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"name","operator":"In","values":["pl-stan"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"containers":[{"args":["-sc","/etc/stan-config/stan.conf"],"env":[{"name":"GOGC","value":"400"},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"nats-streaming:0.24.6-alpine3.15","livenessProbe":{"httpGet":{"path":"/","port":8222},"initialDelaySeconds":10,"timeoutSeconds":5},"name":"pl-stan","ports":[{"containerPort":8222,"name":"monitor"},{"containerPort":7777,"name":"metrics"}],"readinessProbe":{"failureThreshold":30,"httpGet":{"path":"/streaming/serverz","port":8222},"initialDelaySeconds":10,"timeoutSeconds":5},"resources":{"requests":{"cpu":0}},"volumeMounts":[{"mountPath":"/etc/stan-config","name":"config-volume"},{"mountPath":"/data/stan","name":"stan-sts-vol"},{"mountPath":"/etc/nats/certs","name":"nats-server-tls-volume"}]}],"volumes":[{"configMap":{"name":"stan-config"},"name":"config-volume"},{"name":"nats-server-tls-volume","secret":{"secretName":"service-tls-certs"}}]}},"volumeClaimTemplates":[{"metadata":{"labels":{"app":"pl-cloud","component":"cloud-deps"},"name":"stan-sts-vol"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}},"volumeMode":"Filesystem"}}]}}
    creationTimestamp: "2022-11-06T17:12:32Z"
    generation: 1
    labels:
      app: pl-cloud
      component: cloud-deps
      name: pl-stan
    name: pl-stan
    namespace: plc-dev
    resourceVersion: "441189"
    selfLink: /apis/apps/v1/namespaces/plc-dev/statefulsets/pl-stan
    uid: 6345620e-bea9-4001-b3c9-f17d0d6e756c
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: pl-cloud
        component: cloud-deps
        name: pl-stan
    serviceName: pl-stan
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pl-cloud
          component: cloud-deps
          name: pl-stan
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: name
                    operator: In
                    values:
                    - pl-stan
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - -sc
          - /etc/stan-config/stan.conf
          env:
          - name: GOGC
            value: "400"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: nats-streaming:0.24.6-alpine3.15
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8222
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pl-stan
          ports:
          - containerPort: 8222
            name: monitor
            protocol: TCP
          - containerPort: 7777
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /streaming/serverz
              port: 8222
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "0"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/stan-config
            name: config-volume
          - mountPath: /data/stan
            name: stan-sts-vol
          - mountPath: /etc/nats/certs
            name: nats-server-tls-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: stan-config
          name: config-volume
        - name: nats-server-tls-volume
          secret:
            defaultMode: 420
            secretName: service-tls-certs
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        labels:
          app: pl-cloud
          component: cloud-deps
        name: stan-sts-vol
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: pl-stan-79df97cf65
    observedGeneration: 1
    replicas: 1
    updateRevision: pl-stan-79df97cf65
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
